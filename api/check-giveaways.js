import { EpicGames } from "../lib/epic-games.js";
import { Steam } from "../lib/steam.js";
import { TelegramBot } from "../lib/telegram.js";
import { Storage } from "../lib/storage.js";

// –§—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö —ñ–≥–æ—Ä
function formatNewGamesMessage(games, platform, title) {
  let message = `${title}\n`;
  message += `üéÆ <b>${platform}</b>\n\n`;

  games.forEach((game) => {
    const priceInfo = game.hasMeaningfulPrice
      ? `üíµ <s>${game.originalPrice}</s> <b>–ë–ï–ó–ö–û–®–¢–û–í–ù–û</b>\n`
      : "üéÅ <b>–ë–ï–ó–ö–û–®–¢–û–í–ù–û</b>\n";

    const endDate = game.endDate
      ? `‚è∞ –î–æ: <b>${game.endDate.toLocaleDateString("uk-UA")}</b>\n`
      : "";

    message += `üéÆ <b>${game.title}</b>\n`;
    message += priceInfo;
    message += endDate;
    message += `üîó <a href="${game.url}">–û—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä—É</a>\n\n`;
  });

  return message;
}

export default async function handler(req, res) {
  try {
    console.log("üîÑ –ü–µ—Ä–µ–≤—ñ—Ä—è—é –Ω–æ–≤—ñ —Ä–æ–∑–¥–∞—á—ñ...");

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    const epic = new EpicGames();
    const steam = new Steam();
    const storage = new Storage();
    const telegram = new TelegramBot(
      process.env.TELEGRAM_BOT_TOKEN,
      process.env.TELEGRAM_CHAT_ID
    );

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.TELEGRAM_CHAT_ID) {
      console.log("‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞");
      return res.status(500).json({
        success: false,
        error: "–í—ñ–¥—Å—É—Ç–Ω—ñ TELEGRAM_BOT_TOKEN –∞–±–æ TELEGRAM_CHAT_ID",
      });
    }

    console.log("‚úÖ –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ");

    // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —ñ–≥—Ä–∏
    const [currentEpicGames, currentSteamGames] = await Promise.all([
      epic.getFreeGames(),
      steam.getFreeGames(),
    ]);

    console.log(
      `üìä –ó–Ω–∞–π–¥–µ–Ω–æ —ñ–≥–æ—Ä: Epic: ${currentEpicGames.length}, Steam: ${currentSteamGames.length}`
    );

    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —Ç–∞ –æ—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–∏
    const changes = storage.updateGames(currentEpicGames, currentSteamGames);

    console.log("\nüìä –ó–ú–Ü–ù–ò:");
    console.log(`üÜï –ù–æ–≤—ñ Epic Games: ${changes.newEpic.length}`);
    console.log(`üÜï –ù–æ–≤—ñ Steam: ${changes.newSteam.length}`);
    console.log(`üîö –ó–∞–≤–µ—Ä—à–∏–ª–∏—Å—è Epic: ${changes.endedEpic.length}`);
    console.log(`üîö –ó–∞–≤–µ—Ä—à–∏–ª–∏—Å—è Steam: ${changes.endedSteam.length}`);

    let messagesSent = 0;

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Epic Games
    if (changes.newEpic.length > 0) {
      console.log("üì§ –ù–∞–¥—Å–∏–ª–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Epic Games...");

      const activeNewEpic = changes.newEpic.filter((game) => game.isActive);

      if (activeNewEpic.length > 0) {
        const message = formatNewGamesMessage(
          activeNewEpic,
          "Epic Games",
          "üÜï –ù–û–í–ê –†–û–ó–î–ê–ß–ê!"
        );
        const success = await telegram.sendMessage(message);
        if (success) {
          messagesSent++;
          console.log("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Epic Games –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ");
        } else {
          console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Epic Games");
        }
      }
    }

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Steam
    if (changes.newSteam.length > 0) {
      console.log("üì§ –ù–∞–¥—Å–∏–ª–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Steam...");

      const message = formatNewGamesMessage(
        changes.newSteam,
        "Steam",
        "üÜï –ù–û–í–ê –†–û–ó–î–ê–ß–ê!"
      );
      const success = await telegram.sendMessage(message);
      if (success) {
        messagesSent++;
        console.log("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Steam –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ");
      } else {
        console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è Steam");
      }
    }

    if (messagesSent === 0) {
      console.log("‚ÑπÔ∏è –ù–æ–≤–∏—Ö —Ä–æ–∑–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    }

    const stats = storage.getStats();

    res.status(200).json({
      success: true,
      changes: {
        newEpic: changes.newEpic.length,
        newSteam: changes.newSteam.length,
        endedEpic: changes.endedEpic.length,
        endedSteam: changes.endedSteam.length,
      },
      messagesSent: messagesSent,
      stats: stats,
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–∑–¥–∞—á:", error);
    res.status(500).json({
      success: false,
      error: error.message,
    });
  }
}
