import { EpicGames } from "../lib/epic-games.js";
import { Steam } from "../lib/steam.js";
import { TelegramBot } from "../lib/telegram.js";
import { Storage } from "../lib/storage.js";

export default async function handler(req, res) {
  try {
    console.log("üîÑ –ü–µ—Ä–µ–≤—ñ—Ä—è—é –Ω–æ–≤—ñ —Ä–æ–∑–¥–∞—á—ñ...");

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    const epic = new EpicGames();
    const steam = new Steam();
    const storage = new Storage();
    const telegram = new TelegramBot(
      process.env.TELEGRAM_BOT_TOKEN,
      process.env.TELEGRAM_CHAT_ID
    );

    // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —ñ–≥—Ä–∏
    const [currentEpicGames, currentSteamGames] = await Promise.all([
      epic.getFreeGames(),
      steam.getFreeGames(),
    ]);

    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —Ç–∞ –æ—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–∏
    const changes = storage.updateGames(currentEpicGames, currentSteamGames);

    console.log("\nüìä –ó–ú–Ü–ù–ò:");
    console.log(`üÜï –ù–æ–≤—ñ Epic Games: ${changes.newEpic.length}`);
    console.log(`üÜï –ù–æ–≤—ñ Steam: ${changes.newSteam.length}`);
    console.log(`üîö –ó–∞–≤–µ—Ä—à–∏–ª–∏—Å—è Epic: ${changes.endedEpic.length}`);
    console.log(`üîö –ó–∞–≤–µ—Ä—à–∏–ª–∏—Å—è Steam: ${changes.endedSteam.length}`);

    let messagesSent = 0;

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Epic Games
    if (changes.newEpic.length > 0) {
      console.log("\nüì§ –ù–∞–¥—Å–∏–ª–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Epic Games...");

      const activeNewEpic = changes.newEpic.filter((game) => game.isActive);
      const upcomingNewEpic = changes.newEpic.filter((game) => !game.isActive);

      if (activeNewEpic.length > 0) {
        const message = this.formatNewGamesMessage(
          activeNewEpic,
          "Epic Games",
          "üÜï –ù–û–í–ê –†–û–ó–î–ê–ß–ê!"
        );
        const success = await telegram.sendMessage(message);
        if (success) {
          messagesSent++;
          await new Promise((resolve) => setTimeout(resolve, 2000)); // –ó–∞—Ç—Ä–∏–º–∫–∞
        }
      }

      if (upcomingNewEpic.length > 0) {
        const message = this.formatUpcomingGamesMessage(
          upcomingNewEpic,
          "Epic Games"
        );
        const success = await telegram.sendMessage(message);
        if (success) {
          messagesSent++;
          await new Promise((resolve) => setTimeout(resolve, 2000)); // –ó–∞—Ç—Ä–∏–º–∫–∞
        }
      }
    }

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Steam
    if (changes.newSteam.length > 0) {
      console.log("\nüì§ –ù–∞–¥—Å–∏–ª–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏ Steam...");

      const message = this.formatNewGamesMessage(
        changes.newSteam,
        "Steam",
        "üÜï –ù–û–í–ê –†–û–ó–î–ê–ß–ê!"
      );
      const success = await telegram.sendMessage(message);
      if (success) {
        messagesSent++;
        await new Promise((resolve) => setTimeout(resolve, 2000)); // –ó–∞—Ç—Ä–∏–º–∫–∞
      }
    }

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ä–æ–∑–¥–∞—á—ñ
    if (changes.endedEpic.length > 0 || changes.endedSteam.length > 0) {
      console.log("\nüì§ –ù–∞–¥—Å–∏–ª–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ä–æ–∑–¥–∞—á—ñ...");

      const message = this.formatEndedGamesMessage(
        changes.endedEpic,
        changes.endedSteam
      );
      const success = await telegram.sendMessage(message);
      if (success) {
        messagesSent++;
      }
    }

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–º—ñ–Ω, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å—Ç–∞—Ç—É—Å
    if (messagesSent === 0) {
      console.log("‚ÑπÔ∏è –ù–æ–≤–∏—Ö —Ä–æ–∑–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");

      // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞—Ç—É—Å
      if (process.env.SEND_STATUS_MESSAGES === "true") {
        const stats = storage.getStats();
        const statusMessage = `üìä –°—Ç–∞—Ç—É—Å: ${
          stats.totalEpic
        } —ñ–≥–æ—Ä –≤ Epic Games, ${
          stats.totalSteam
        } –≤ Steam\nüïí –û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${new Date().toLocaleString("uk-UA")}`;
        await telegram.sendMessage(statusMessage);
      }
    }

    const stats = storage.getStats();

    res.status(200).json({
      success: true,
      changes: {
        newEpic: changes.newEpic.length,
        newSteam: changes.newSteam.length,
        endedEpic: changes.endedEpic.length,
        endedSteam: changes.endedSteam.length,
      },
      messagesSent: messagesSent,
      stats: stats,
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–∑–¥–∞—á:", error);
    res.status(500).json({
      success: false,
      error: error.message,
    });
  }
}

// –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —ñ–≥—Ä–∏
function formatNewGamesMessage(games, platform, title) {
  let message = `${title}\n`;
  message += `üéÆ <b>${platform}</b>\n\n`;

  games.forEach((game) => {
    const priceInfo = game.hasMeaningfulPrice
      ? `üíµ <s>${game.originalPrice}</s> <b>–ë–ï–ó–ö–û–®–¢–û–í–ù–û</b>\n`
      : "üéÅ <b>–ë–ï–ó–ö–û–®–¢–û–í–ù–ê –†–û–ó–î–ê–ß–ê</b>\n";

    const endDate = game.endDate
      ? `‚è∞ –î–æ: <b>${game.endDate.toLocaleDateString("uk-UA")}</b>\n`
      : "";

    message += `üéÆ <b>${game.title}</b>\n`;
    message += priceInfo;
    message += endDate;
    message += `üîó <a href="${game.url}">–û—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä—É</a>\n\n`;
  });

  return message;
}

// –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –º–∞–π–±—É—Ç–Ω—ñ —ñ–≥—Ä–∏
function formatUpcomingGamesMessage(games, platform) {
  let message = `üìÖ <b>–ù–û–í–ê –ú–ê–ô–ë–£–¢–ù–Ø –†–û–ó–î–ê–ß–ê!</b>\n`;
  message += `üéÆ <b>${platform}</b>\n\n`;

  games.forEach((game) => {
    message += `üïí <b>${game.title}</b>\n`;
    message += `üìÜ –ü–æ—á–∞—Ç–æ–∫: <b>${game.startDate.toLocaleDateString(
      "uk-UA"
    )}</b>\n`;
    message += `‚è∞ –ö—ñ–Ω–µ—Ü—å: <b>${game.endDate.toLocaleDateString(
      "uk-UA"
    )}</b>\n\n`;
  });

  return message;
}

// –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ —Ä–æ–∑–¥–∞—á—ñ
function formatEndedGamesMessage(endedEpic, endedSteam) {
  let message = `üîö <b>–†–û–ó–î–ê–ß–Ü –ó–ê–í–ï–†–®–ò–õ–ò–°–Ø</b>\n\n`;

  if (endedEpic.length > 0) {
    message += `üéØ <b>Epic Games:</b>\n`;
    endedEpic.forEach((game) => {
      message += `‚ùå ${game.title}\n`;
    });
    message += "\n";
  }

  if (endedSteam.length > 0) {
    message += `‚ö° <b>Steam:</b>\n`;
    endedSteam.forEach((game) => {
      message += `‚ùå ${game.title}\n`;
    });
    message += "\n";
  }

  message += `üí´ <i>–î—è–∫—É—î–º–æ, —â–æ –≤—Å—Ç–∏–≥–ª–∏ –æ—Ç—Ä–∏–º–∞—Ç–∏!</i>`;

  return message;
}
